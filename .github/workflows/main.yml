name: Main workflow
on: push

env:
  docker_username: ${{ github.actor }}
  docker_password: ${{ secrets.GITHUB_TOKEN }}
  GIT_COMMIT: ${{ github.sha }}

jobs:
  Build:
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    steps:
      - uses: actions/checkout@v4
      - name: Build application
        run: ci/build-app.sh
      - name: Test
        run: ci/unit-test-app.sh

  Linting:
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
      - name: Checkout repository (with history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run Super-Linter
        uses: github/super-linter/slim@v7
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DISABLE_ERRORS: true

  Docker-image:
    runs-on: ubuntu-latest
    needs: [Build]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify Dockerfile location
        run: |
          echo "PWD: $(pwd)"
          ls -la
          find . -maxdepth 4 -type f \( -iname 'Dockerfile' -o -iname '*.Dockerfile' \) -print

      - name: Set image metadata (lowercase)
        id: meta
        run: |
          REPO_LC="${GITHUB_REPOSITORY,,}"      # owner/repo in lowercase
          IMAGE="ghcr.io/${REPO_LC}/app"
          BRANCH_LC="${GITHUB_REF_NAME,,}"
          echo "image=${IMAGE}" >> "$GITHUB_OUTPUT"
          echo "tag_sha=${GIT_COMMIT}" >> "$GITHUB_OUTPUT"
          echo "tag_ref=${BRANCH_LC}" >> "$GITHUB_OUTPUT"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.docker_username }}
          password: ${{ env.docker_password }}

      - name: Build image
        run: |
          docker build \
            -f MyOwnPipeline/app/Dockerfile \
            -t "${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.tag_sha }}" \
            MyOwnPipeline/app

      - name: Tag (branch) and push
        run: |
          docker tag "${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.tag_sha }}" \
                     "${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.tag_ref }}"

          docker push "${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.tag_sha }}"
          docker push "${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.tag_ref }}"
